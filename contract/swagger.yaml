openapi: '3.0.0'
info:
  title: Bright Smiles Architects API
  version: '1.0.0'
  description: API for managing medical appointments

servers:
  - url: 'http://localhost:3001/api'
    description: Local development server

paths:
  /auth/login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientProfile'
        '401':
          description: Invalid credentials

  /auth/logout:
    post:
      summary: Logout user
      responses:
        '204':
          description: Logout successful

  /appointments:
    get:
      summary: Get all appointments
      description: Retrieve a list of all appointments
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
    post:
      summary: Create a new appointment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentCreate'
      responses:
        '201':
          description: Appointment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'

  /appointments/{appointmentId}:
    get:
      summary: Get appointment details
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Appointment details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        '404':
          description: Appointment not found
    put:
      summary: Update an appointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentUpdate'
      responses:
        '200':
          description: Appointment updated successfully
    delete:
      summary: Delete an appointment
      parameters:
        - name: appointmentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Appointment deleted successfully

  /referrals:
    post:
      summary: Create a new referral
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralCreate'
      responses:
        '201':
          description: Referral created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Referral'

  /referrals/{referralId}:
    put:
      summary: Update a referral
      parameters:
        - name: referralId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralUpdate'
      responses:
        '200':
          description: Referral updated successfully
    delete:
      summary: Delete a referral
      parameters:
        - name: referralId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Referral deleted successfully

  /notifications:
    get:
      summary: Get all notifications without full content
      responses:
        '200':
          description: List of notifications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/NotificationListItem'

  /notifications/{notificationId}:
    get:
      summary: Get a single notification with full content
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Complete notification details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'

  /notifications/{notificationId}/read:
    put:
      summary: Mark a notification as read
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Notification marked as read successfully

  /cms/pages:
    get:
      summary: List all available CMS pages
      responses:
        '200':
          description: List of all pages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CMSPageContent'

  /cms/pages/{slug}:
    get:
      summary: Get CMS page content by slug
      parameters:
        - name: slug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Page content retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CMSPageContent'
        '404':
          description: Page not found

  /profile:
    get:
      summary: Get patient profile
      description: Retrieve the profile information of the logged-in patient
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientProfile'

components:
  schemas:
    Appointment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        patientId:
          type: string
          format: uuid
        patientName:
          type: string
        doctor:
          type: object
          properties:
            id:
              type: string
              format: uuid
            name:
              type: string
            specialty:
              type: string
          required:
            - id
            - name
            - specialty
        date:
          type: string
          format: date-time
        status:
          type: string
          enum: [SCHEDULED, COMPLETED, CANCELLED]
        notes:
          type: string
        medicalNotes:
          type: string
        prescriptions:
          type: array
          items:
            type: string
        billing:
          type: object
          properties:
            amount:
              type: number
            status:
              type: string
              enum: [PENDING, PAID, CANCELLED]
          required:
            - amount
            - status
      required:
        - id
        - patientId
        - doctor
        - date
        - status
    AppointmentCreate:
      type: object
      properties:
        patientId:
          type: string
        doctorId:
          type: string
        date:
          type: string
        time:
          type: string
        description:
          type: string
      required:
        - patientId
        - doctorId
        - date
        - time

    AppointmentUpdate:
      type: object
      required:
        - appointmentId
      properties:
        appointmentId:
          type: string
          format: uuid
        date:
          type: string
        time:
          type: string
        description:
          type: string
        status:
          type: string
          enum: [SCHEDULED, COMPLETED, CANCELLED]

    Referral:
      type: object
      properties:
        id:
          type: string
        patientId:
          type: string
        issuingDoctorId:
          type: string
        targetSpeciality:
          type: string
        diagnosis:
          type: string
        recommendations:
          type: string
        issueDate:
          type: string
        expiryDate:
          type: string
        status:
          type: string
          enum: [ACTIVE, USED, EXPIRED]
      required:
        - id
        - patientId
        - issuingDoctorId
        - targetSpeciality
        - diagnosis
        - recommendations
        - issueDate
        - expiryDate
        - status

    ReferralCreate:
      type: object
      properties:
        patientId:
          type: string
        targetSpeciality:
          type: string
        diagnosis:
          type: string
        recommendations:
          type: string
        expiryDate:
          type: string
      required:
        - patientId
        - targetSpeciality
        - diagnosis
        - recommendations
        - expiryDate

    ReferralUpdate:
      type: object
      required:
        - referralId
        - status
      properties:
        referralId:
          type: string
          format: uuid
          description: The ID of the referral to update
        status:
          type: string
          enum: [ACTIVE, USED, EXPIRED]

    Notification:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        subtitle:
          type: string
        receivedDate:
          type: string
          format: date-time
        read:
          type: boolean
          default: false
        content:
          type: string
      required:
        - id
        - title
        - subtitle
        - receivedDate
        - content

    NotificationListItem:
      type: object
      properties:
        id:
          type: string
          format: uuid
        title:
          type: string
        subtitle:
          type: string
        receivedDate:
          type: string
          format: date-time
        read:
          type: boolean
          default: false
      required:
        - id
        - title
        - subtitle
        - receivedDate

    CMSPageContent:
      type: object
      properties:
        slug:
          type: string
        lastUpdated:
          type: string
          format: date-time
        content:
          type: string
          description: Markdown content
      required:
        - slug
        - lastUpdated
        - content

    Address:
      type: object
      properties:
        country:
          type: string
        city:
          type: string
        street:
          type: string
        postalCode:
          type: string
      required:
        - country
        - city
        - street
        - postalCode

    PatientProfile:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        phoneNumber:
          type: string
        username:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
        - firstName
        - lastName
        - phoneNumber
        - username
        - address

    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
      required:
        - username
        - password
